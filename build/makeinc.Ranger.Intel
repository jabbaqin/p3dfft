# P3DFFT build Options
#
# -DSINGLE_PREC : for single precision (default is double precision)
#
# -DONED : for 1D decomposition (default is 2D but it can be made 1D through
#    setting up grid 1 x n when running the code) 
#
# -DFFTW or -DESSL for using FFTW3 library or ESSL (on IBM) in 1D FFTs.
#   One of these has to be set.
#
# -DESTIMATE, -DMEASURE or -DPATIENT (default -DMEASURE) for initialization thouroughness in setting up FFTW calls   (this option only goes with -DFFTW)
# For search-once-for-a-fast-algorithm "-DMEASURE" (takes more time 
#on p3dfft_setup())
# For search-once-for-the-fastest-algorithm "-DPATIENT" (takes much 
#more time on p3dfft_setup())
#
# -DDIMS_C to assign processor rows and columns according to C convention, 
# rather than "Fortran", which is default.
#
# -DUSE_EVEN for using MPI_Alltoall instead of MPI_Alltoallv. This method
#   pads the send buffers with zeros to make them equal size. This options
#   is not needed on most architectures. 
#
# -DSTRIDE1 [-DNBL_X=... -DNBL_Y=...] to enable stride-1 data structure on 
#  output (this may in some cases give some advantage in performance). 
#  You can define loop blocking factors NBL_X and NBL_Y to experiment, 
#  otherwise they are set to default values. NBL_Y=1 is recommended. 

DFLAGS = -DFFTW  -DSINGLE_PREC -DSTRIDE1 -DNBL_Y=1 -DNBL_X=32


FF = mpif90 

FFLAGS = -O3 -xW -132 -fpp
  # run "module load fftw3" before make
FFT_LIB = -L$(TACC_FFTW3_LIB) -lfftw3 -lfftw3f

INCL = -I$(TACC_FFTW3_INC)
LDFLAGS= $(FFLAGS) $(FFT_LIB)
AR = ar
ARFLAGS = -ruv

